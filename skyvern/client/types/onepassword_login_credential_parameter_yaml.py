# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
# Import ParameterType from the SDK as requested
from skyvern.forge.sdk.workflow.models.parameter import ParameterType # type: ignore
import pydantic


class OnePasswordLoginCredentialParameterYaml(UniversalBaseModel):
    """
    YAML representation for a 1Password Login Credential Parameter.
    """

    key: str
    description: typing.Optional[str] = None
    # Use the SDK Enum for parameter_type, and ensure it's a literal for this specific YAML type
    parameter_type: typing.Literal[ParameterType.ONEPASSWORD_LOGIN_CREDENTIAL] = ParameterType.ONEPASSWORD_LOGIN_CREDENTIAL

    onepassword_access_token_aws_secret_key: str
    onepassword_item_id: str # The item's UUID or name/title
    onepassword_vault_id: str # The vault's UUID or name

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
            # populate_by_name = True # Typically not needed unless aliases are used.
            # For YAML, direct field names are common.
            # Let's stick to what AwsSecretParameterYaml has.
