"""Add deleted_at column to debug_sessions table

Revision ID: 7bb2020d5fe1
Revises: f72cf593e1a7
Create Date: 2025-07-30 23:36:16.714869+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7bb2020d5fe1"
down_revision: Union[str, None] = "f72cf593e1a7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("project_org_created_at_index", table_name="projects")
    op.drop_index("project_org_run_id_index", table_name="projects")
    op.drop_index("project_org_wpid_index", table_name="projects")
    op.drop_table("projects")
    op.add_column("debug_sessions", sa.Column("deleted_at", sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("debug_sessions", "deleted_at")
    op.create_table(
        "projects",
        sa.Column("project_revision_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("project_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("organization_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("artifact_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("workflow_permanent_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("run_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("version", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("modified_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("deleted_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("project_revision_id", name="projects_pkey"),
        sa.UniqueConstraint("organization_id", "project_id", "version", name="uc_org_project_version"),
    )
    op.create_index("project_org_wpid_index", "projects", ["organization_id", "workflow_permanent_id"], unique=False)
    op.create_index("project_org_run_id_index", "projects", ["organization_id", "run_id"], unique=False)
    op.create_index("project_org_created_at_index", "projects", ["organization_id", "created_at"], unique=False)
    # ### end Alembic commands ###
