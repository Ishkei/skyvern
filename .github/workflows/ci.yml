name: Run tests and pre-commit
# Run this job on pushes to `main`, and for pull requests. If you don't specify
# `branches: [main], then this actions runs _twice_ on pull requests, which is
# annoying.
on:
  workflow_call:
  pull_request:
  push:
    branches: [main]
jobs:
  test:
    name: Run tests and pre-commit hooks
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: skyvern
          POSTGRES_DATABASE: skyvern
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      # If you wanted to use multiple Python versions, you'd have specify a matrix in the job and
      # reference the matrixe python version here.
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      # Install uv for fast Python package management
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      # Create virtual environment and install dependencies
      - name: Create virtual environment and install dependencies
        run: |
          uv venv
          uv pip install -e .[dev]
      # Finally, run pre-commit.
      - name: Run all pre-commit hooks
        uses: pre-commit/action@v3.0.0
        env:
          ENABLE_OPENAI: "true"
          OPENAI_API_KEY: "sk-dummy"
          ENABLE_AZURE_GPT4O_MINI: "true"
          AZURE_GPT4O_MINI_DEPLOYMENT: "dummy"
          AZURE_GPT4O_MINI_API_KEY: "dummy"
          AZURE_GPT4O_MINI_API_BASE: "dummy"
          AZURE_GPT4O_MINI_API_VERSION: "dummy"
          AWS_REGION: "us-east-1"
          ENABLE_BEDROCK: "true"
      - name: Run alembic check
        env:
          ENABLE_OPENAI: "true"
          OPENAI_API_KEY: "sk-dummy"
          ENABLE_AZURE_GPT4O_MINI: "true"
          AZURE_GPT4O_MINI_DEPLOYMENT: "dummy"
          AZURE_GPT4O_MINI_API_KEY: "dummy"
          AZURE_GPT4O_MINI_API_BASE: "dummy"
          AZURE_GPT4O_MINI_API_VERSION: "dummy"
          AWS_REGION: "us-east-1"
          ENABLE_BEDROCK: "true"
        run: |
          source .venv/bin/activate
          ./run_alembic_check.sh
      - name: trigger tests
        env:
          ENABLE_OPENAI: "true"
          OPENAI_API_KEY: "sk-dummy"
          AWS_ACCESS_KEY_ID: "dummy"
          AWS_SECRET_ACCESS_KEY: "dummy"
        run: |
          source .venv/bin/activate
          pytest
  fe-lint-build:
    name: Frontend Lint and Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./skyvern-frontend
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Install Node.js dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Run build
        run: npm run build
